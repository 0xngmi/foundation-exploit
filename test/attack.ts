import { expect } from "chai";
import { ethers } from "hardhat";

describe("attack", function () {
    it("run", async function () {
        const [deployer] = await ethers.getSigners();

        // https://foundation.app/@redkamsitipop/rbg/5
        const exampleNFT = new ethers.Contract("0x23e944911cb14183c36D86A9f500c506494F3f76", [
            "function ownerOf(uint256 tokenId) public view returns (address)"
        ], deployer)
        expect(await exampleNFT.ownerOf("5")).to.be.equal("0x68db95B945Cc91cF7BB5f0701FDed961beEc4e12")

        const Rug = await ethers.getContractFactory("Rug");
        const rug = await Rug.deploy();

        const proxyAdmin = new ethers.Contract("0x72DE36c8ebEAcB6100C36249552e35fefF0EE099", [
            "function upgrade(address proxy, address newImplementation) public view",
        ], deployer)

        const foundationTreasury = new ethers.Contract("0x67Df244584b67E8C51B10aD610aAfFa9a402FdB6", [
            "function upgradeTo(address newImplementation) public view",
        ], deployer)
        const foundationTreasuryAddress = await foundationTreasury.getAddress()

        const foundationMultisig = new ethers.Contract("0x9d9C46aCa6a2c5FF6824A92d521b6381f9f8F1a9", [
            "function submitTransaction(address destination, uint256 value, bytes data) public",
            "function confirmTransaction(uint256 transactionId) public",
        ])

        const upgradeCalldata = (await proxyAdmin.upgrade.populateTransaction(foundationTreasuryAddress, await rug.getAddress())).data
        //console.log(upgradeCalldata)
        const msig1 = await ethers.getImpersonatedSigner("0x48Eb8b463b8B3fBd1669F3f147Ce1055D6669555");
        await deployer.sendTransaction({
            to: msig1.address,
            value: ethers.parseEther("1.0"), // Sends exactly 1.0 ether
          });
        await (foundationMultisig.connect(msig1) as any).submitTransaction(await proxyAdmin.getAddress(), "0", upgradeCalldata)
        const msig2 = await ethers.getImpersonatedSigner("0x21037Cf5f02D006F60b7826f0Ae926860700AC8e");
        await deployer.sendTransaction({
            to: msig2.address,
            value: ethers.parseEther("1.0"), // Sends exactly 1.0 ether
          });
        //console.log("owner", await deployer.provider.getStorage('0x67Df244584b67E8C51B10aD610aAfFa9a402FdB6', '0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103'))
        const upgradeTx = await (foundationMultisig.connect(msig2) as any).confirmTransaction("331")
        //console.log("upgrade events", (await upgradeTx.wait()).logs)

        await (Rug.attach(foundationTreasuryAddress) as any).rug();
        await expect(exampleNFT.ownerOf("5")).to.be.rejected
    });
})